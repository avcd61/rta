import discord
from discord import app_commands
from discord.ext import commands, tasks
from dotenv import load_dotenv
import yt_dlp
import os
import asyncio
from datetime import datetime
import random
from collections import deque

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
TOKEN = os.getenv('DISCORD_TOKEN')

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–≥–∞ –¥–ª—è –æ—à–∏–±–æ–∫
def log_error(error_message):
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    error_log = f"[ERROR] {timestamp}: {error_message}"
    print(error_log)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ yt-dlp - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
ytdl_format_options = {
    'format': 'bestaudio/best',
    'outtmpl': '%(extractor)s-%(id)s-%(title)s.%(ext)s',
    'restrictfilenames': True,
    'noplaylist': True,
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'logtostderr': False,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0'
}

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ FFmpeg –¥–ª—è Replit
ffmpeg_options = {
    'before_options': '-loglevel panic',
    'options': '-vn'
}

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä ytdl
ytdl = yt_dlp.YoutubeDL(ytdl_format_options)

class MusicQueue:
    def __init__(self):
        self.queue = deque()
        self.current = None
        self.loop = False
        self.volume = 0.5

    async def add(self, track):
        self.queue.append(track)
        return len(self.queue) - 1

    async def next(self):
        if self.loop and self.current:
            return self.current
        if self.queue:
            self.current = self.queue.popleft()
            return self.current
        self.current = None
        return None
        
    async def clear(self):
        self.queue.clear()
        self.current = None
        self.loop = False

class YTDLSource(discord.PCMVolumeTransformer):
    def __init__(self, source, *, data, volume=0.5):
        super().__init__(source, volume)
        self.data = data
        self.title = data.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ')
        self.url = data.get('webpage_url', '')
        self.duration = data.get('duration', 0)
        self.thumbnail = data.get('thumbnail', '')
        self.uploader = data.get('uploader', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å')

    @classmethod
    async def from_url(cls, url, *, loop=None, stream=True):
        loop = loop or asyncio.get_event_loop()
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            data = await loop.run_in_executor(None, lambda: ytdl.extract_info(url, download=False))
            
            if not data:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ")

            if 'entries' in data:
                data = data['entries'][0]

            # –ü–æ–ª—É—á–∞–µ–º URL
            filename = data['url']
            
            # –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            source = discord.FFmpegPCMAudio(filename, **ffmpeg_options)
            return cls(source, data=data)
            
        except Exception as e:
            log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ: {str(e)}")
            raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏: {str(e)}")

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
bot = commands.Bot(command_prefix='!', intents=intents)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
queues = {}

def get_queue(guild_id):
    if guild_id not in queues:
        queues[guild_id] = MusicQueue()
    return queues[guild_id]

def create_music_embed(title, description, color=discord.Color.blue(), thumbnail=None):
    embed = discord.Embed(title=title, description=description, color=color)
    if thumbnail:
        embed.set_thumbnail(url=thumbnail)
    embed.set_footer(text=f"–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –±–æ—Ç ‚Ä¢ {datetime.now().strftime('%H:%M:%S')}")
    return embed

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –ø—É—Å—Ç–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
async def check_empty_voice_channel(guild):
    try:
        if guild.voice_client and guild.voice_client.is_connected():
            members = guild.voice_client.channel.members
            # –ï—Å–ª–∏ –≤ –∫–∞–Ω–∞–ª–µ —Ç–æ–ª—å–∫–æ –±–æ—Ç –∏–ª–∏ –≤–æ–æ–±—â–µ –Ω–∏–∫–æ–≥–æ
            if len(members) <= 1:
                await guild.voice_client.disconnect()
                queue = get_queue(guild.id)
                await queue.clear()
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—É—Å—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
async def play_audio(voice_client, player, after_callback):
    try:
        if not voice_client or not voice_client.is_connected():
            return
            
        if voice_client.is_playing():
            voice_client.stop()
            
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π callback
        def simple_callback(error):
            if error:
                log_error(f"–û—à–∏–±–∫–∞: {str(error)}")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∫–∞–∫ –∑–∞–¥–∞—á—É
            asyncio.run_coroutine_threadsafe(after_callback(), bot.loop)
            
        voice_client.play(player, after=simple_callback)
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {str(e)}")

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    await bot.tree.sync()
    check_empty_channels.start()
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    await bot.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.listening, 
            name="/play"
        )
    )

# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –æ—Ç –ø—É—Å—Ç—ã—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
@tasks.loop(minutes=5)
async def check_empty_channels():
    for guild in bot.guilds:
        await check_empty_voice_channel(guild)

@bot.tree.command(name="play", description="–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏–∑ YouTube")
async def play(interaction: discord.Interaction, url: str):
    if not interaction.user.voice:
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return

    await interaction.response.defer()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        if not interaction.guild.voice_client:
            voice_client = await interaction.user.voice.channel.connect()
        else:
            voice_client = interaction.guild.voice_client
            if voice_client.channel != interaction.user.voice.channel:
                await voice_client.move_to(interaction.user.voice.channel)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–µ–µ—Ä–∞ –∏ –æ—á–µ—Ä–µ–¥–∏
        queue = get_queue(interaction.guild_id)
        player = await YTDLSource.from_url(url, loop=bot.loop)
        player.volume = queue.volume
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º callback –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Å–Ω–∏
        async def song_finished():
            await check_song_end(interaction.guild)
        
        if not voice_client.is_playing():
            # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –ø–µ—Ä–≤—É—é –ø–µ—Å–Ω—é
            await play_audio(voice_client, player, song_finished)
            queue.current = player
            
            embed = create_music_embed(
                "üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç",
                f"**{player.title}**\n"
                f"üë§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {player.uploader}\n"
                f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {player.duration//60}:{player.duration%60:02d}",
                thumbnail=player.thumbnail
            )
            await interaction.followup.send(embed=embed)
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å
            position = await queue.add(player)
            embed = create_music_embed(
                "üìù –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å",
                f"**{player.title}**\n"
                f"üë§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {player.uploader}\n"
                f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {player.duration//60}:{player.duration%60:02d}\n"
                f"üìä –ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏: {position + 1}",
                thumbnail=player.thumbnail
            )
            await interaction.followup.send(embed=embed)
            
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {str(e)}")
        await interaction.followup.send(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è",
                f"```{str(e)}```\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.",
                color=discord.Color.red()
            )
        )

async def check_song_end(guild):
    try:
        queue = get_queue(guild.id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø–µ—Å–Ω—é –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        next_track = await queue.next()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–ª–∏–µ–Ω—Ç –∏ –æ–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω
        if not guild.voice_client or not guild.voice_client.is_connected():
            return
            
        if next_track:
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º callback –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Å–Ω–∏
            async def next_song_finished():
                await check_song_end(guild)
                
            # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Å–ª–µ–¥—É—é—â—É—é –ø–µ—Å–Ω—é
            await play_audio(guild.voice_client, next_track, next_song_finished)
            
            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            channel = None
            for ch in guild.text_channels:
                if ch.permissions_for(guild.me).send_messages:
                    channel = ch
                    break
            
            if channel:
                embed = create_music_embed(
                    "üéµ –°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫",
                    f"**{next_track.title}**\n"
                    f"üë§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {next_track.uploader}\n"
                    f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {next_track.duration//60}:{next_track.duration%60:02d}",
                    thumbnail=next_track.thumbnail
                )
                await channel.send(embed=embed)
        else:
            # –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞
            queue.current = None
            await check_empty_voice_channel(guild)
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–Ω—Ü–∞ —Ç—Ä–µ–∫–∞: {str(e)}")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–∞—É–∑—ã
@bot.tree.command(name="pause", description="–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def pause(interaction: discord.Interaction):
    if not interaction.guild.voice_client or not interaction.guild.voice_client.is_playing():
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    interaction.guild.voice_client.pause()
    await interaction.response.send_message(
        embed=create_music_embed(
            "‚è∏Ô∏è –ü–∞—É–∑–∞",
            "–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/resume` –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
@bot.tree.command(name="resume", description="–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def resume(interaction: discord.Interaction):
    if not interaction.guild.voice_client:
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    if not interaction.guild.voice_client.is_paused():
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    interaction.guild.voice_client.resume()
    await interaction.response.send_message(
        embed=create_music_embed(
            "‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
            "–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ."
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ç—Ä–µ–∫–∞
@bot.tree.command(name="skip", description="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫")
async def skip(interaction: discord.Interaction):
    if not interaction.guild.voice_client or not interaction.guild.voice_client.is_playing():
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    queue = get_queue(interaction.guild_id)
    current_track = queue.current
    
    interaction.guild.voice_client.stop()
    
    await interaction.response.send_message(
        embed=create_music_embed(
            "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫",
            f"–¢—Ä–µ–∫ **{current_track.title if current_track else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}** –ø—Ä–æ–ø—É—â–µ–Ω."
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏
@bot.tree.command(name="queue", description="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
async def queue_command(interaction: discord.Interaction):
    queue = get_queue(interaction.guild_id)
    
    if not queue.current and not queue.queue:
        await interaction.response.send_message(
            embed=create_music_embed(
                "üìù –û—á–µ—Ä–µ–¥—å",
                "–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ —Ç—Ä–µ–∫–∏ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/play`"
            )
        )
        return
    
    description = ""
    
    if queue.current:
        description += f"**üîä –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:**\n{queue.current.title} - {queue.current.uploader}\n\n"
    
    if queue.queue:
        description += "**üìã –í –æ—á–µ—Ä–µ–¥–∏:**\n"
        items = list(queue.queue)
        for i, track in enumerate(items[:10]):
            description += f"{i+1}. {track.title} - {track.uploader}\n"
        
        if len(items) > 10:
            description += f"\n...–∏ –µ—â–µ {len(items) - 10} —Ç—Ä–µ–∫–æ–≤"
    else:
        description += "\n**–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞**"
    
    await interaction.response.send_message(
        embed=create_music_embed(
            "üìù –û—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è",
            description
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏
@bot.tree.command(name="clear", description="–û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
async def clear(interaction: discord.Interaction):
    queue = get_queue(interaction.guild_id)
    
    if not queue.queue and not queue.current:
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–û—á–µ—Ä–µ–¥—å —É–∂–µ –ø—É—Å—Ç–∞!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    await queue.clear()
    
    if interaction.guild.voice_client and interaction.guild.voice_client.is_playing():
        interaction.guild.voice_client.stop()
    
    await interaction.response.send_message(
        embed=create_music_embed(
            "üßπ –û—á–∏—Å—Ç–∫–∞",
            "–û—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –æ—á–∏—â–µ–Ω–∞."
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
@bot.tree.command(name="volume", description="–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (0-100)")
async def volume(interaction: discord.Interaction, volume: int):
    if volume < 0 or volume > 100:
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–ì—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    queue = get_queue(interaction.guild_id)
    queue.volume = volume / 100
    
    if interaction.guild.voice_client and interaction.guild.voice_client.is_playing():
        interaction.guild.voice_client.source.volume = queue.volume
    
    await interaction.response.send_message(
        embed=create_music_embed(
            "üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å",
            f"–ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {volume}%"
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ–≤—Ç–æ—Ä–∞
@bot.tree.command(name="loop", description="–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ–≤—Ç–æ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞")
async def loop(interaction: discord.Interaction):
    queue = get_queue(interaction.guild_id)
    queue.loop = not queue.loop
    
    status = "–≤–∫–ª—é—á–µ–Ω" if queue.loop else "–≤—ã–∫–ª—é—á–µ–Ω"
    
    await interaction.response.send_message(
        embed=create_music_embed(
            "üîÑ –†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞",
            f"–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ {status}"
        )
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
@bot.tree.command(name="disconnect", description="–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
async def disconnect(interaction: discord.Interaction):
    if not interaction.guild.voice_client:
        await interaction.response.send_message(
            embed=create_music_embed(
                "‚ùå –û—à–∏–±–∫–∞",
                "–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!",
                color=discord.Color.red()
            ),
            ephemeral=True
        )
        return
    
    # –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∏ –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è
    queue = get_queue(interaction.guild_id)
    await queue.clear()
    
    await interaction.guild.voice_client.disconnect()
    
    await interaction.response.send_message(
        embed=create_music_embed(
            "üëã –û—Ç–∫–ª—é—á–µ–Ω–∏–µ",
            "–ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
        )
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN) 